[info]
typeName = "std::weak_ptr"
numTemplateParams = 1
ctype = "WEAK_PTR_TYPE"
header = "memory"
ns = ["namespace std"]
replaceTemplateParamIndex = []

[codegen]
decl = """
template <typename DB, typename T0>
struct TypeHandler<DB, %1%<T0>> {
  using type = StaticTypes::Unit<DB>;

  static StaticTypes::Unit<DB> getSizeType(
      const %1%<T0>& container,
      typename TypeHandler<DB, %1%<T0>>::type returnArg) {
    return returnArg;
  }
};
"""

# Weak pointers do not have ownership, so let's not follow them (for now)
func = """
// DummyFunc %1%
"""
