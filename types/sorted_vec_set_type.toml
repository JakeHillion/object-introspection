[info]
typeName = "folly::sorted_vector_set<"
ctype = "SORTED_VEC_SET_TYPE"
header = "folly/sorted_vector_types.h"
ns = ["namespace std", "folly::sorted_vector_set"]
replaceTemplateParamIndex = [1,2]
underlyingContainerIndex = 4

[codegen]
decl = """
template <typename DB, typename T0, typename T1, typename T2, typename T3, typename T4>
struct TypeHandler<DB, %1%<T0, T1, T2, T3, T4>> {
  using type = StaticTypes::Pair<DB,
      StaticTypes::VarInt<DB>,
      typename TypeHandler<DB, T4>::type>;

  static StaticTypes::Unit<DB> getSizeType(
      const %1%<T0, T1, T2, T3, T4>& container,
      typename TypeHandler<DB, %1%<T0, T1, T2, T3, T4>>::type returnArg) {
    auto tail = returnArg.write((uintptr_t)&container);
    const T4 &underlyingContainer = container.get_container();
    return OIInternal::getSizeType<DB>(underlyingContainer, tail);
  }
};
"""

func = """
// DummyFunc %1%
"""
